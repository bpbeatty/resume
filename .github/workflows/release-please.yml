on:
  pull_request:
    types:
      - closed

permissions:
  contents: write
  packages: write
  pull-requests: write

env:
    IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release-please.outputs.releases_created }}
      tag: ${{ steps.release-please.outputs.tag_name }}
      upload_url: ${{ steps.release-please.outputs.upload_url }}
    steps:
      - uses: googleapis/release-please-action@c2a5a2bd6a758a0937f1ddb1e8950609867ed15c # v4
        id: release-please
        with:
          release-type: simple
          package-name: release-please-action

  build-image:
    name: Build and push image
    runs-on: ubuntu-latest
    needs: release-please
    if: needs.release-please.outputs.releases_created && github.event.pull_request.merged
    permissions:
      contents: write
      packages: write
    strategy:
      fail-fast: false
      matrix:
        image_name:
          - bpbeatty-resume
    steps:
      - name: Checkout Push to Registry action
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4

      - name: Generate tags
        id: generate-tags
        shell: bash
        run: |
          # Generate a timestamp for creating an image version history
          TIMESTAMP="$(date +%Y%m%d)"

          COMMIT_TAGS=()
          BUILD_TAGS=()

          # Have tags for tracking builds during pull request
          SHA_SHORT="${GITHUB_SHA::7}"
          COMMIT_TAGS+=("pr-${{ github.event.number }}")
          COMMIT_TAGS+=("${SHA_SHORT}")

          BUILD_TAGS=("${TIMESTAMP}")
          BUILD_TAGS+=("latest")

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              echo "Generated the following commit tags: "
              for TAG in "${COMMIT_TAGS[@]}"; do
                  echo "${TAG}"
              done

              alias_tags=("${COMMIT_TAGS[@]}")
          else
              alias_tags=("${BUILD_TAGS[@]}")
          fi

          echo "Generated the following build tags: "
          for TAG in "${BUILD_TAGS[@]}"; do
              echo "${TAG}"
          done

          echo "alias_tags=${alias_tags[*]}" >> $GITHUB_OUTPUT

      # Build metadata
      - name: Image Metadata
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        id: meta
        with:
          images: |
            ${{ matrix.image_name }}
          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/bpbeatty/resume/master/README.md
            org.opencontainers.image.description=An image to build my resume
            org.opencontainers.image.title=${{ matrix.image_name }}

      # Build image using Buildah action
      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@7a95fa7ee0f02d552a32753e7414641a04307056 # v2
        with:
          containerfiles: |
            ./Containerfile
          image: ${{ matrix.image_name }}
          tags: |
            ${{ steps.generate-tags.outputs.alias_tags }}
          labels: ${{ steps.meta.outputs.labels }}
          oci: false

      # Workaround bug where capital letters in your GitHub username make it impossible to push to GHCR.
      # https://github.com/macbre/push-to-ghcr/issues/12
      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@d0603cd0a7dd490be678164909f65c7737470a7f # v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}

      # Push the image to GHCR (Image Registry)
      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2
        id: push
        if: github.event_name != 'pull_request'
        env:
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ github.token }}
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ steps.registry_case.outputs.lowercase }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --disable-content-trust

      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Sign container
      - uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0
        if: github.event_name != 'pull_request'

      - name: Sign container image
        if: github.event_name != 'pull_request'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ steps.registry_case.outputs.lowercase }}/${{ steps.build_image.outputs.image }}@${TAGS}
        env:
          TAGS: ${{ steps.push.outputs.digest }}
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.SIGNING_SECRET }}

      - name: Echo outputs
        if: github.event_name != 'pull_request'
        run: |
          echo "${{ toJSON(steps.push.outputs) }}"

  build_pdf:
    name: Build PDF
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    needs: [build-image, release-please]
    if: needs.release-please.outputs.releases_created && github.event.pull_request.merged
    container:
      image: ghcr.io/bpbeatty/bpbeatty-resume:latest
      credentials:
        username: ${{ github.actor }}
        password: ${{ github.token }}
    steps:
      - name: Checkout out
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4

      - name: Make PDF
        run: make

      - name: Upload PDF
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: bpbeatty-resume
          path: ./bin/resume.pdf

      - name: Install github CLI
        run: |
          sudo dnf install 'dnf-command(config-manager)' -y
          sudo dnf config-manager addrepo --from-repofile=https://cli.github.com/packages/rpm/gh-cli.repo
          sudo dnf install gh -y

      - name: Upload release PDF
        if: github.event.pull_request.merged
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release upload \
            ${{ needs.release-please.outputs.tag }} \
            ./bin/resume.pdf \
            --repo ${{ github.repository_owner }}/${{ github.event.repository.name }} \
            --clobber

  # build_rpm:
  #   name: Build RPM
  #   runs-on: ubuntu-22.04
  #   permissions:
  #     contents: write
  #     packages: write
  #   needs: [build-image, release-please]
  #   if: needs.release-please.outputs.releases_created && github.event.pull_request.merged
  #   container:
  #     image: ghcr.io/bpbeatty/bpbeatty-resume:latest
  #     credentials:
  #       username: ${{ github.actor }}
  #       password: ${{ github.token }}
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v5

  #     - name: Git add
  #       run: git config --system --add safe.directory /__w/resume/resume

  #     - name: Make RPM
  #       run: make rpm

  #     - name: Upload RPM
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: bpbeatty-resume-rpm
  #         path: ./bin

  #     - name: Install github CLI
  #       run: |
  #         sudo dnf install 'dnf-command(config-manager)' -y
  #         sudo dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo
  #         sudo dnf install gh -y

  #     - name: Upload release RPM
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}
  #       run: |
  #         gh release upload \
  #           ${{ needs.release-please.outputs.tag }} \
  #           ./bin/bpbeatty-resume-*.rpm \
  #           --repo ${{ github.repository_owner }}/${{ github.event.repository.name }} \
  #           --clobber
